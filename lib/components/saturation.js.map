{"version":3,"file":"saturation.js","sourceRoot":"","sources":["../../src/lib/components/saturation.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAU,MAAM,aAAa,CAAC;AAC7C,OAAO,EAAE,eAAe,EAAE,MAAM,qBAAqB,CAAC;AACtD,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,kBAAkB,CAAC;AAGhD,MAAM,OAAO,UAAW,SAAQ,MAAM;IAGpC,YAAY,IAAgB;QAC1B,KAAK,CAAC,IAAI,EAAE,YAAY,EAAE,oBAAoB,EAAE,IAAI,CAAC,CAAC;IACxD,CAAC;IAED,MAAM,CAAC,IAAe;QACpB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,KAAK,CAAC;YACT;gBACE,GAAG,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC,GAAG;gBACvB,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG;gBAClB,KAAK,EAAE,eAAe,CAAC,IAAI,CAAC;aAC7B;YACD;gBACE,kBAAkB,EAAE,eAAe,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;aACzE;SACF,CAAC,CAAC;QACH,IAAI,CAAC,EAAE,CAAC,YAAY,CAClB,gBAAgB,EAChB,cAAc,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,iBAAiB,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAC7D,CAAC;IACJ,CAAC;IAED,OAAO,CAAC,MAAc,EAAE,GAAa;QACnC,2DAA2D;QAC3D,OAAO;YACL,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,GAAG;YACrE,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;SACxF,CAAC;IACJ,CAAC;CACF","sourcesContent":["import { Slider, Offset } from './slider.js';\r\nimport { hsvaToHslString } from '../utils/convert.js';\r\nimport { clamp, round } from '../utils/math.js';\r\nimport type { HsvaColor } from '../types';\r\n\r\nexport class Saturation extends Slider {\r\n  declare hsva: HsvaColor;\r\n\r\n  constructor(root: ShadowRoot) {\r\n    super(root, 'saturation', 'aria-label=\"Color\"', true);\r\n  }\r\n\r\n  update(hsva: HsvaColor): void {\r\n    this.hsva = hsva;\r\n    this.style([\r\n      {\r\n        top: `${100 - hsva.v}%`,\r\n        left: `${hsva.s}%`,\r\n        color: hsvaToHslString(hsva)\r\n      },\r\n      {\r\n        'background-color': hsvaToHslString({ h: hsva.h, s: 100, v: 100, a: 1 })\r\n      }\r\n    ]);\r\n    this.el.setAttribute(\r\n      'aria-valuetext',\r\n      `Saturation ${round(hsva.s)}%, Brightness ${round(hsva.v)}%`\r\n    );\r\n  }\r\n\r\n  getMove(offset: Offset, key?: boolean): Record<string, number> {\r\n    // Saturation and brightness always fit into [0, 100] range\r\n    return {\r\n      s: key ? clamp(this.hsva.s + offset.x * 100, 0, 100) : offset.x * 100,\r\n      v: key ? clamp(this.hsva.v - offset.y * 100, 0, 100) : Math.round(100 - offset.y * 100)\r\n    };\r\n  }\r\n}\r\n"]}