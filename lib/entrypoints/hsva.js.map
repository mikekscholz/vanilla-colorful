{"version":3,"file":"hsva.js","sourceRoot":"","sources":["../../src/lib/entrypoints/hsva.ts"],"names":[],"mappings":"AAMA,OAAO,EAAE,gBAAgB,EAAE,MAAM,qCAAqC,CAAC;AACvE,OAAO,EAAE,iBAAiB,EAAE,MAAM,qBAAqB,CAAC;AACxD,OAAO,EAAE,SAAS,EAAE,MAAM,qBAAqB,CAAC;AAEhD,MAAM,UAAU,GAA0B;IACxC,YAAY,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;IACxC,MAAM,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI;IACtB,QAAQ,EAAE,SAAS;IACnB,KAAK,EAAE,iBAAiB;IACxB,QAAQ,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;CACvC,CAAC;AAgBF,MAAM,OAAO,QAAS,SAAQ,gBAA2B;IACvD,IAAc,UAAU;QACtB,OAAO,UAAU,CAAC;IACpB,CAAC;CACF","sourcesContent":["import type {\r\n  ColorModel,\r\n  ColorPickerEventListener,\r\n  ColorPickerEventMap,\r\n  HsvaColor\r\n} from '../types';\r\nimport { AlphaColorPicker } from '../components/alpha-color-picker.js';\r\nimport { equalColorObjects } from '../utils/compare.js';\r\nimport { roundHsva } from '../utils/convert.js';\r\n\r\nconst colorModel: ColorModel<HsvaColor> = {\r\n  defaultColor: { h: 0, s: 0, v: 0, a: 1 },\r\n  toHsva: (hsva) => hsva,\r\n  fromHsva: roundHsva,\r\n  equal: equalColorObjects,\r\n  fromAttr: (color) => JSON.parse(color)\r\n};\r\n\r\nexport interface HsvaBase {\r\n  addEventListener<T extends keyof ColorPickerEventMap<HsvaColor>>(\r\n    type: T,\r\n    listener: ColorPickerEventListener<ColorPickerEventMap<HsvaColor>[T]>,\r\n    options?: boolean | AddEventListenerOptions\r\n  ): void;\r\n\r\n  removeEventListener<T extends keyof ColorPickerEventMap<HsvaColor>>(\r\n    type: T,\r\n    listener: ColorPickerEventListener<ColorPickerEventMap<HsvaColor>[T]>,\r\n    options?: boolean | EventListenerOptions\r\n  ): void;\r\n}\r\n\r\nexport class HsvaBase extends AlphaColorPicker<HsvaColor> {\r\n  protected get colorModel(): ColorModel<HsvaColor> {\r\n    return colorModel;\r\n  }\r\n}\r\n"]}